#!/bin/sh

OPKG_DEST=ram
RAM_DIR="$(awk '$1 == "dest" && $2 == "'"$OPKG_DEST"'" { gsub("/+$", "", $3); print $3 }' /etc/opkg.conf)"
LISTS_DIR="$(awk '$1 == "lists_dir" { gsub("/+$", "", $3); print $3 }' /etc/opkg.conf)"

if ! [ -d "$RAM_DIR" ]; then
  mkdir -p "$RAM_DIR"
  [ -d "$RAM_DIR/tmp" ] || ln -s /tmp "$RAM_DIR"/tmp
  [ -d "$RAM_DIR/var" ] || ln -s /tmp "$RAM_DIR"/var
fi

if ! [ -d "$LISTS_DIR" ]; then
  mkdir -p "$LISTS_DIR"
fi

_X() {
  ( set -x
    "$@"
  )
}

usage() {
cat >&2 << EOF
usage: wrapper arount opkg, use opkg for more help
  $0 list | status | install | remove | enable | disable | update | files | search | query
EOF
}

ensure_lists_updated() {
  if ! ls "$LISTS_DIR"/* 2> /dev/null 1>&2; then
    echo "I: no opkg package lists, we need an update"
    opkg update > /dev/null
    echo
  fi >&2
}

tac() {
  local line
  if read line; then
    tac
    echo "$line"
  fi
}

status() {
  opkg -o "$RAM_DIR" list
}

install() {
  ensure_lists_updated

  local F=
  if [ "$1" = -F ]; then
    F=-F
    shift
  fi

  for pkg in "$@"; do
    opkg --noaction -d "$OPKG_DEST" install "$pkg" | awk '$1 == "Installing" { print $2 }' | tac | while read pkg; do
      if opkg -d "$OPKG_DEST" install "$pkg"; then :
        enable $F "$pkg"
        rm -f "$RAM_DIR/usr/lib/opkg/info/"*.postinst
      fi
    done
  done
}

remove() {
  local pkg pkgs
  local info=

  if [ "$1" = -a ]; then
    pkgs="$(status | cut -f 1 -d ' ')"
    remove $pkgs
    return $?
  fi

  for pkg in "$@"; do
    info="$info $pkg.list"
  done

  # try to get packges in configure order
  pkgs="$( cd "$RAM_DIR/usr/lib/opkg/info"; ls -t $info 2> /dev/null | sed -re 's/[.][^.]+$//')"

  for pkg in $pkgs; do
    disable "$pkg"
    { 3>&1 1>&2 2>&3 3>&- \
      opkg -d "$OPKG_DEST" remove "$pkg" | \
        sed -e "/^cat: can't open / d"
    } 3>&1 1>&2 2>&3 3>&-
  done
}

files() {
  opkg -d "$OPKG_DEST" files "$@"
}

enable() {
  local p files src dst rlink dir op tmp
  local F=
  if [ "$1" = -F ]; then
    F=-f
    shift
  fi
  for p in "$@"; do
    files "$p" | while read src; do
      [ -f "$src" ] || continue
      dst="${src#$RAM_DIR}"
      op=

      case "$dst" in
        /lib/upgrade/* ) # NOP
          rm -f "$src"
	  continue
          ;;
        /usr/lib/collectd/* | \
        /usr/share/collectd/* | \
        /usr/share/terminfo/* )
          tmp="${dst#/*/*/*/}"
          dst="${dst%/$tmp}"
          src="${RAM_DIR%/}/${dst#/}"
          op=ln
          ;;
        /etc/init.d/* )
          op=ln
          ;;
        /etc/* )
          op=cp
          ;;
        /lib/* | /usr/* | /www/* )
          op=ln
          ;;
        * )
          echo "E: unknown destination $dst, SKIP" >&2
          continue
          ;;
      esac

      if [ -L "$dst" ]; then
        rlink="$(readlink "$dst")"
        [ "$rlink" = "$src" ] && \
          continue
      fi

      if [ -z "$F" ] && [ -f "$dst" ]; then
        echo "I: would install $dst, but file already exists."
        continue
      fi

      dir="${dst%/*}"
      mkdir -p "$dir"

      case "$op" in
        ln )
          opfmt=" LN$F "
          ln -s $F "$src" "$dst"
          ;;
	cp )
          opfmt=" CP$F "
          cp -a $F "$src" "$dst"
          ;;
        * )
          echo "E: unknown op $op src=$src dst=$dst, SKIP" >&2
          continue
          ;;
      esac

      [ -n "$opfmt" ] && \
	echo "$opfmt $dst"

      #case "$op:$dst" in
      #  *:/etc/init.d/* ) 
      #    ;; # this is needed for init.d/ram-pkg
      #  cp:/etc/* ) 
      #    rm -f "$src"
      #    continue
      #    ;;
      #esac
    done
  done
}

disable() {
  local p files src dst rlink dir
  for p in "$@"; do
    files "$p" | sort -r | while read src; do
      [ -f "$src" ] || continue
      dst="${src#$RAM_DIR}"

      if   [ -L "$dst" ]; then
        rlink="$(readlink "$dst")"
        [ "$rlink" = "$src" ] && \
          _X rm -f "$dst"
	  continue
      elif [ -d "$src" ]; then
	rmdir "$d" 2> /dev/null
      elif [ -f "$dst" ]; then
        echo "I: would uninstall $dst, but it is not linked."
        continue
      fi
    done
  done
}

query() {
  ensure_lists_updated
  opkg list | grep -i "$*"
}

cmd="$1"
[ $# -gt 0 ] && shift

case "$cmd" in
  up | update ) opkg update ;;
  l | ls | li | list )  opkg list ;;

  i | ins | install )  install "$@" ;;
  r | rm | remove )        remove  "$@" ;;
  s | st  | status  )  status  "$@" ;;
  e | en  | enable  )  enable  "$@" ;;
  d | di  | disable )  disable "$@" ;;
  f | files )          files   "$@" ;;
  q | query | search ) query   "$@" ;;

  "" | help | -h | * ) usage ;;
esac

cd /tmp
find . -name "opkg-??????" -type d | while read f; do
    _X rm -rf "$f"
  done
