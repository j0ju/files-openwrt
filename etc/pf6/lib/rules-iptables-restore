# vim: ft=sh
#set -x
set -e

my="$(basename "$0")"

for table in $tables; do
	[ -d "${rulesdir}/${table}" ] || {
		echo "$my: rules dir for table ${table} does not exist."
		continue
	} >&2
	
	echo -n "$my: generating rules for $table: " >&2
	
	echo -n "# BEGIN generated by pf ipt backend - "; date
	echo "*$table" 

	#<old># find "${rulesdir}/${table}/" -type f | sort | \
        ( cd "${rulesdir}/${table}/"; ls ) | cat - "${rulesdir}/${table}/"* 2>/dev/null | sed 's/^.*-j \([-A-Za-z0-9]\+\)\( .*\)\?/\1/g' | awk '/^([^#])/ {print $1}' | sort -u | \
	  while read f; do
		#chain="$(basename "$f")"
		chain="$f"

	 	[ "$chain" = "ACCEPT" ] && continue
	 	[ "$chain" = "DROP" ] && continue
	 	[ "$chain" = "RETURN" ] && continue
	 	[ "$chain" = "REJECT" ] && continue
	 	[ "$chain" = "LOG" ] && continue
	 	[ "$chain" = "ULOG" ] && continue
	 	[ "$chain" = "MIRROR" ] && continue
	 	[ "$chain" = "DNAT" ] && continue
	 	[ "$chain" = "REDIRECT" ] && continue
	 	[ "$chain" = "SNAT" ] && continue
	 	[ "$chain" = "MASQUERADE" ] && continue
	 	[ "$chain" = "TCPMSS" ] && continue
	 	[ "$chain" = "CLASSIFY" ] && continue
	 	[ "$chain" = "CONNMARK" ] && continue
	 	[ "$chain" = "MARK" ] && continue
	 	[ "$chain" = "QUEUE" ] && continue
	 	[ "$chain" = "ULOG" ] && continue
		
		for systable in \
		  filter/INPUT filter/FORWARD filter/OUTPUT \
		  nat/PREROUTING nat/POSTROUTING nat/OUTPUT \
		  mangle/INPUT mangle/FORWARD mangle/OUTPUT \
		  mangle/PREROUTING mangle/POSTROUTING \
		  'no/no'; do
			if [ "$table/$chain" = "$systable" ]; then
				echo ":$chain ACCEPT [0:0]"
				break
			fi
		done
		if [ "$systable" = "no/no" ]; then
			echo ":$chain - [0:0]" 
		fi
	done
	

	#find "${rulesdir}/${table}/" -type f | sort | \
	ls "${rulesdir}/${table}/" | sort | \
          while read f; do
		chain="$(basename "$f")"
		f="${rulesdir}/${table}/${f}"
		echo -n "$chain " >&2
		
		#test -r "$f" && echo -n "readable " >&2 || echo "NOT readable " >&2
		#test -L "$f" && echo -n "symlink " >&2 || echo "NOT a symlink " >&2
		#echo >&2

		echo "# $table/$chain"
		[ -r "$f" ] && {
			awk '
				/^#/ { print $0 } 
				/^( |\t)*$/ { print "# "$0 } 
				/^[^# ].*$/ { print "-A '$chain' "$0 } 
			' < "$f"
		}
	done
	echo "COMMIT"

	echo -n "# END generated by pf ipt backend - "; date
	#echo 
	echo "." >&2
		
done > "${rulesfile}"
echo "$my: generation successfull"

ip6tables-restore < "${rulesfile}"
echo "$my: loaded successfully iptables rules from ${rulesfile}"

